[package]
name = "acci"
version = "0.1.21"
edition = "2021"
rust-version = "1.84.1"
authors = ["Michael Walloschke <michael.walloschke@axians.de>"]
description = "Enterprise-grade Rust-based system with multi-tenancy support"
license = "MIT"

[[bin]]
name = "acci"
path = "src/main.rs"

[dependencies]
# External Dependencies
tokio = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
anyhow = { workspace = true }

[dev-dependencies]
tokio = { workspace = true, features = ["rt", "macros"] }

[workspace]
members = [
    "crates/acci-core",
    "crates/acci-api",
    "crates/acci-db",
    "crates/acci-auth",
    "crates/acci-frontend",
    "tests",
]

[workspace.package]
version = "0.1.10"
edition = "2021"
rust-version = "1.75"
authors = ["Michael Walloschke <michael.walloschke@axians.de>"]
description = "Enterprise-grade Rust-based system with multi-tenancy support"
license = "MIT"
repository = "https://github.com/axians/acci"

[workspace.dependencies]
# Internal Dependencies
acci-core = { path = "crates/acci-core" }
acci-api = { path = "crates/acci-api" }
acci-db = { path = "crates/acci-db" }
acci-auth = { path = "crates/acci-auth" }
acci-frontend = { path = "crates/acci-frontend" }

# Core
tokio = { version = "1.43.0", features = ["full"] }
axum = "0.8.1"
tower = "0.5.2"
tower-http = { version = "0.6.2", features = ["trace", "cors"] }
bytes = "1.5.0"
http-body-util = "0.1.1"

# Database
sqlx = { version = "0.8.1", features = [
    "runtime-tokio-rustls",
    "postgres",
    "uuid",
    "time",
    "json",
    "migrate",
    "macros"
] }
sea-query = "0.32.1"
time = { version = "0.3", features = ["serde"] }
uuid = { version = "1.0", features = ["v4", "serde"] }

# CLI
clap = { version = "4.5", features = ["derive"] }

# Authentication & Security
jsonwebtoken = "9.3.1"
argon2 = { version = "0.5.3" }
rand = "0.8.0"
rand_core = { version = "0.6.4", features = ["getrandom"] }
async-trait = "0.1"
validator = { version = "0.20.0", features = ["derive"] }

# Serialization
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.138"

# Logging & Metrics
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }

# Error Handling
thiserror = "2.0.11"
anyhow = "1.0.95"

# Testing
testcontainers = "0.23.2"
testcontainers-modules = { version = "0.11.6", features = ["postgres"] }

[workspace.lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"
missing_debug_implementations = "warn"
unreachable_pub = "warn"

[workspace.lints.clippy]
enum_glob_use = "deny"
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
unwrap_used = "warn"

[workspace.metadata]
msrv = "1.75.0"
